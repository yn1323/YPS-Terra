import type { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import { Button } from '@/atoms/Button/Button'
import client from '@/config/apollo-client'
import { login, logout } from '@/firebase/common'
import { getShop } from '@/graphql/Shop/query'
import { useShopQuery } from '@/graphql/generated'
import { getCookieValue } from '@/helpers/string'

const Home: NextPage = () => {
  const { loading, error, data } = useShopQuery({
    variables: { shopId: 'QCv5QIAxDue0QuirDyoC' },
  })
  const onClickHandler = () => {
    console.log(data)
  }
  const loginHandler = () => {
    login()
  }
  const logoutHandler = () => {
    logout()
  }
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Button onClick={onClickHandler}>hoge</Button>
      <Button onClick={loginHandler}>login</Button>
      <Button onClick={logoutHandler}>logount</Button>
    </div>
  )
}

export default Home

export const getServerSideProps: GetServerSideProps = async context => {
  let result
  try {
    const { data } = await client.query({
      query: getShop,
      variables: { shopId: 'QCv5QIAxDue0QuirDyoC' },
      context: {
        headers: {
          authorization: getCookieValue(context.req.headers.cookie),
        },
      },
    })
    result = data
  } catch (e) {
    console.log(e)
    return {
      redirect: {
        permanent: false,
        destination: '/error/auth',
      },
    }
  }

  return {
    props: {
      result,
    },
  }
}
